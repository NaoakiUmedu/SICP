;; 2.1
;; 有理数の演算の定義
(define (add-rat x y)
  (make-rat (+ (* (numer x) (denom y))
               (* (numer y) (denom x)))
            (* (denom x) (denom y))))
(define (sub-rat x y)
  (make-rat (- (* (numer x) (denom y))
               (* (numer y) (denom x)))
            (* (denom x) (denom y))))
(define (mul-rat x y)
  (make-rat (* (numer x) (numer y))
            (* (denom x) (denom y))))
(define (div-rat x y)
  (make-rat (* (numer x) (denom y))
            (* (denom x) (numer y))))
; a/b == c/d <=> ad == bd
(define (equal-rat? x y)
  (= (* (numer x) (denom y))
     (* (numer y) (denom x))))
;; 有理数の定義
;(define (make-rat n d) (cons n d))
(define (make-rat n d)
  (define (gcd a b)
    (if (< a b)
        (gcd b a)
        (let ((r (remainder a b)))
              (if (= r 0)
              b
              (gcd b r)))))
  (let ((g (gcd n d)))
    (cons (/ n g) (/ d g))))
(define (numer x) (car x))
(define (denom x) (cdr x))
;; ログ
(define (print-rat x)
  (newline)
  (display (numer x))
  (display "/")
  (display (denom x)))

;; 動作確認
(define one-half (make-rat 1 2))
;; (print-rat one-half)
(define one-third (make-rat 1 3))
;; (print-rat (add-rat one-half one-third))
;; (print-rat (sub-rat one-half one-third))
;; (print-rat (mul-rat one-half one-third))
;; (print-rat (div-rat one-half one-third))
;; (display (equal-rat? one-half one-third))
;; (display (equal-rat? one-half one-half))
;(print-rat (add-rat one-third one-third))

;; R 2.1
(define (make-rat n d)
  (define (gcd a b)
    (if (<= (abs a) (abs b))
        (gcd b a)
        (let ((r (remainder a b)))
              (if (= r 0)
              b
              (gcd b r)))))
  ;; 既約分数にする
  (let ((g (gcd n d)))
    (let ((n-g (/ n g))
           (d-g (/ d g)))
          (if (> d-g 0)
              (cons n-g d-g)
              (cons (* -1 n-g) (* -1 d-g))))))

(define (make-rat n d)
  (define (gcd a b)
    (if (= b 0)
        a
        (gcd b (remainder a b))))
  (let ((g (abs (gcd n d))))
    (if (< d 0)
        (cons (/ (- n) g) (/ (- d) g))
        (cons (/ n g) (/ d g)))))

(print-rat (make-rat  1 -2))
(print-rat (make-rat -1  2))
(print-rat (make-rat  1  2))
(print-rat (make-rat -1 -2))
